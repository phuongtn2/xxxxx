<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="vn.azteam.tabasupport.modules.nursery.object.dao.NurseryDao">
    <!--EhcacheCache config-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToLiveSeconds" value="1800"/>
        <property name="timeToIdleSeconds" value="1800"/>
        <property name="maxEntriesLocalHeap" value="100"/>
        <property name="maxEntriesLocalDisk" value="300"/>
        <property name="memoryStoreEvictionPolicy" value="LFU"/>
    </cache>

    <sql id="fullColumns">tn.*</sql>

    <sql id="baseColumns">
        tn.id,
        tn.fileId,
        tn.createId,
        tn.updateId,
        tn.created,
        tn.updated
    </sql>
    <sql id="nurserySeedBaseColumns">
        tns.seedId
    </sql>

    <insert id="insert" parameterType="Nursery" useGeneratedKeys="true" keyColumn="id" keyProperty="nursery.id"
            flushCache="true">
        INSERT
        INTO tb_nurseries (
        id,
        clientPrimaryKey,
        registrationId,
        acreage,
        density,
        address,
        provinceId,
        districtId,
        wardId,
        seedingDate,
        createId,
        updateId,
        created,
        updated
        )
        VALUE (
        NULL,
        #{nursery.clientPrimaryKey},
        #{nursery.registrationId},
        #{nursery.acreage},
        #{nursery.density},
        #{nursery.address},
        #{nursery.provinceId},
        #{nursery.districtId},
        #{nursery.wardId},
        #{nursery.seedingDate},
        #{nursery.createId},
        #{nursery.updateId},
        #{nursery.created},
        #{nursery.updated}
        );
    </insert>

    <update id="update" parameterType="Nursery" flushCache="true">
        UPDATE tb_nurseries tn
        SET
        tn.clientPrimaryKey = #{nursery.clientPrimaryKey},
        tn.acreage = #{nursery.acreage},
        tn.density = #{nursery.density},
        tn.address = #{nursery.address},
        tn.provinceId = #{nursery.provinceId},
        tn.districtId = #{nursery.districtId},
        tn.wardId = #{nursery.wardId},
        tn.seedingDate = #{nursery.seedingDate},
        tn.exchangeDate = #{nursery.exchangeDate},
        tn.exchangeRatio = #{nursery.exchangeRatio},
        tn.skinRatio = #{nursery.skinRatio},
        tn.trayRatio = #{nursery.trayRatio},
        tn.quantity = #{nursery.quantity},
        tn.delFlag = #{nursery.delFlag},
        tn.updateId = #{nursery.updateId},
        tn.updated = #{nursery.updated}
        WHERE tn.id = #{nursery.id};
    </update>

    <select id="getAllNurseryByRegistrationIds" resultType="Nursery" flushCache="false">
        SELECT
        <include refid="fullColumns"/>,
        <include refid="nurserySeedBaseColumns"/>
        FROM tb_nurseries tn
        LEFT JOIN tb_nursery_seeds tns ON tns.nurseryId = tn.id
        WHERE tn.registrationId IN (
        <foreach collection="registrationIds" item="registrationId" separator=",">
            #{registrationId}
        </foreach>
        )
        AND delFlag = 0
        ORDER BY tn.id DESC ;
    </select>

    <select id="findAllNurseryByResponsibilityEmployeeId" resultType="Nursery" flushCache="false">
        SELECT
        <include refid="fullColumns"/>,
        <include refid="nurserySeedBaseColumns"/>
        FROM tb_nurseries tn
        LEFT JOIN tb_nursery_seeds tns ON (tns.nurseryId = tn.id)
        INNER JOIN tb_crop_registrations tcr ON (tcr.id=tn.registrationId)
        WHERE tcr.responsibilityEmployeeId = #{responsibilityEmployeeId}
        AND delFlag = 0
        AND tcr.isCancel = 0
        ORDER BY tn.id DESC ;
    </select>
</mapper>
