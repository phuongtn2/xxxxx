image: dtrthi/docker-jdk-8-maven-node:latest

stages:
  - build
  - test
  - deploy

variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd`are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
cache:
  paths:
    - /root/.m2/repository/

build:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS clean'
    - 'mvn $MAVEN_CLI_OPTS compile'
    - 'mvn $MAVEN_CLI_OPTS resources:testResources'
    - 'mvn $MAVEN_CLI_OPTS compiler:testCompile'
  artifacts:
    paths:
      - target/
      - angular/dist/
  only:
    - develop
    - qc-test
    - master

test:
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS surefire:test'
  artifacts:
    paths:
      - target/
      - angular/dist/
  only:
    - develop
    - qc-test
    - master

deploy_develop:
  stage: deploy
  script:
    - 'mvn -P dev $MAVEN_CLI_OPTS antrun:run'
    - 'mvn $MAVEN_CLI_OPTS war:war'
    - 'mvn -P dev $MAVEN_CLI_OPTS  tomcat7:undeploy'
    - 'mvn -P dev $MAVEN_CLI_OPTS  tomcat7:deploy-only'
  environment:
      name: develop
      url: http://dev.maderata.com/
  only:
    - develop

deploy_beta:
  stage: deploy
  script:
    - 'mvn -P test $MAVEN_CLI_OPTS antrun:run'
    - 'mvn $MAVEN_CLI_OPTS war:war'
    - 'mvn -P test $MAVEN_CLI_OPTS  tomcat7:undeploy'
    - 'mvn -P test $MAVEN_CLI_OPTS  tomcat7:deploy-only'
  environment:
      name: beta
      url: http://beta.maderata.com/
  only:
    - qc-test

deploy_release:
  stage: deploy
  script:
    - 'mvn -P prod $MAVEN_CLI_OPTS antrun:run'
    - 'mvn $MAVEN_CLI_OPTS war:war'
    - 'mvn -P prod $MAVEN_CLI_OPTS  tomcat7:undeploy'
    - 'mvn -P prod $MAVEN_CLI_OPTS  tomcat7:deploy-only'
  environment:
      name: release
      url: http://maderata.com/
  only:
    - master